#Autor: Fagner Geraldes Braga
#Data de criação: 17/10/2022
#Data de atualização: 17/10/2022
#Versão: 0.01
******************************************************************************************
Encapsulamento
O principal objetivo do encapsulamento é refinar a segurança do sistema limitando o acesso
as variáveis e também impedindo que valores inapropriados sejam atribuídos.

Modificadores de Acesso
private: Acesso permitido somente na própria classe.

"nenhum modificador definido": acesso permitido a todas as classes que pertençam ao mesmo 
pacote.

protected: Acesso permitido a todas as classes que pertençam ao mesmo pacote.
Acesso permitido a classes de outros pacotes em caso de herança.

public: Acesso permitido a todas as classes de qualquer pacote.
******************************************************************************************
Encapsulamento
Deixar as variáveis como private
Criar os "getters e setters" para acesso as variáveis protegidas.
Botão direito do mouse, source, generate, getters and setters
******************************************************************************************
JDBC (Java Database Connector)
4 classes modelo responsáveis pela conexão com o banco de dados
******************************************************************************************
Classe 1
Driver manager (tipo de banco de dados)
"baixar um driver do fabricante"
https://dev.mysql.com/downloads/connector/j/

No Eclipse
Copiar o driver para o pacote model
Clicar com o botão direito no driver e selecionar Build path, Add to build path
******************************************************************************************
Classe 2 - Connection (abrir e fechar uma conexão)


